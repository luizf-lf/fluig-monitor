// Prisma schema docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/main/generated/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Environment {
  id               Int                  @id @default(autoincrement())
  name             String
  release          String
  baseUrl          String
  kind             String
  oAuthKeysId      EnvironmentAuthKeys?
  updateScheduleId UpdateSchedule?
  monitorHistory   MonitorHistory[]
  logCreatedAt     DateTime             @default(now())
  logUpdateAt      DateTime             @default(now())
  logDeleted       Boolean              @default(false)
  isFavorite       Boolean              @default(false)
}

model EnvironmentAuthKeys {
  id            Int         @id @default(autoincrement())
  payload       String
  hash          String
  environmentId Int         @unique
  environment   Environment @relation(fields: [environmentId], references: [id])
}

model UpdateSchedule {
  id             Int          @id @default(autoincrement())
  frequency      String
  from           String
  to             String
  onlyOnWorkDays Boolean      @default(false)
  environmentId  Int          @unique
  environment    Environment? @relation(fields: [environmentId], references: [id])
}

model MonitorHistory {
  id            Int           @id @default(autoincrement())
  timestamp     DateTime      @default(now())
  environmentId Int
  environment   Environment?  @relation(fields: [environmentId], references: [id])
  apiResponse   APIResponse[]
}

model APIResponse {
  id                 Int             @id @default(autoincrement())
  endpoint           String
  monitorigApiId     String?
  responseStatusCode Int
  responseBody       String
  responseTimeMs     Int
  monitorHistoryId   Int?
  monitorHistory     MonitorHistory? @relation(fields: [monitorHistoryId], references: [id])
}

model AppSetting {
  id        Int     @id @default(autoincrement())
  settingId String  @unique
  value     String
  group     String?
}

model Notification {
  id        Int      @id @default(autoincrement())
  type      String
  title     String?
  body      String
  createdAt DateTime @default(now())
  readed    Boolean  @default(false)
}

model Log {
  id        Int      @id @default(autoincrement())
  timestamp DateTime @default(now())
  type      String
  message   String
}
